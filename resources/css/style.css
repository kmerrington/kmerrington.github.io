/* Universal Styles */

html {
  font-size: 16px;
  font-family: 'Poppins', sans-serif;
  }

/* Header */

header {
  background-color: hsla(200, 55%, 60%, 1);
  font-weight: 500;
  width: 100%;
  padding: 10px;
}

/* Nav */

nav {
  display: inline-block;
  background-color: blue;
  font-weight: 700;
  width: 100%;
  padding: 15px;
}

.button {
  background-color: aqua;
  color: black;
  padding: 10px;
  cursor: pointer;
}

.button:link {
  color: blue;
  text-decoration: underline;
}

a:visited {
  color: purple;
}

.button:hover {
  background-color: blueviolet;
}

.button:active {
  background-color: blueviolet;
  color: white;
}

#current-page .button {
  background-color: red;
}

/* Main */

main {
  background-color: rgb(190, 182, 182);
  text-align: center;
}

h1 {
  color: black;
  font-size: 28px;
  text-align: center;
}

h2 {
  padding: 0px;
  font-size: 24px;
  text-align: center;
}

p {
  max-width: 900px;
  margin: 0 auto;
  padding: 20px;
}

a {
  padding: 20px;
  color: blue;
  text-decoration: underline;
}

/* Footer */

footer {
  position: fixed;
  bottom: 0px;
  text-align: center;
  width: 100%;
  padding: 25px 0px;
  background-color: blue;
}

.container {
  /*
  display: inline-flex; allows multiple flex containers to appear inline with each other.
  */
  display: flex; /* changes an element to a block-level container with flex items inside of it. */
  /*
  flex-grow: 1; used to specify how much space (and in what proportions) flex items absorb along the main axis.
  flex-shrink: 1; used to specify how much flex items shrink and in what proportions along the main axis.
  flex-basis: 800px; used to specify the initial size of an element styled with flex-grow and/or flex-shrink.
  */
  flex: 1 1 800px; /* used to specify flex-grow, flex-shrink, and flex-basis in one declaration. */
  /*
  flex-direction: column; used to specify the main and cross axes.
  flex-wrap: wrap; specifies that elements should shift along the cross axis if the flex container is not large enough.
  */
  flex-flow: column wrap; /* used to specify flex-wrap and flex-direction in one declaration. */
  justify-content: center; /* used to space items along the main axis. */
  align-content: center; /* used to space rows along the cross axis. */
}

.box {
  display: flex;
}