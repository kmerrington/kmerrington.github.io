/* 
@media only screen and (max-width: 480px) {
    
}

@media only screen and (min-width: 320px) { 
    * ruleset for >= 320px *
}
@media only screen and (min-width: 480px) { 
    * ruleset for >= 480px *
}

@media only screen and (min-resolution: 150dpi) {
  .logo {
    background-image: url("#");   the logo will be replaced with the higher resolution one.
  }
}

@media only screen and (min-width: 480px), (orientation: landscape) {
    only one of the media features to be true for its CSS to apply.
}

*/

.container {
    border: 2px blue solid;
    height: 600px;
    width: 600px;
    display: grid;
    /*
    grid-template-columns: 25% 50% 25%;
    grid-template-rows: 20% 70% 10%;
    grid-template: repeat(3, 1fr) / repeat(2, 1fr 2 fr); 3 rows and 4 columns.
    grid-template: 20% 60% 20% / 20% minmax(50px, 500px) 20%; minmax requires the width declaration to be deleted.
    */
    grid-template: 1fr 2fr 8fr 1fr / 1fr 2fr;
    /*
    row-gap: 10px;
    column-gap: 15px;
    */
    gap: 10px 15px;

    grid-template-areas: "header header"
                         "introduction introduction"
                         "picture information"
                         "footer footer";
  }
  
.box {
    background-color: beige;
    color: black;
    border-radius: 5px;
    border: 2px dodgerblue solid;
  }
  
.introduction {
    background-color: aqua;
    grid-area: introduction;
    /*
    grid-column-start: 1;
    grid-column-end: span 2;
    */
           /* grid-column: 1 / 2; */
    /*
    grid-row-start: 1;
    grid-row-end: 3;
    */
           /* grid-row: 1 / span 2; */
}

.left {
    background-color: blueviolet;
    grid-area: left;
               /* grid-area: 3 / 2 / span 2 / span 2; /* row start, column start, row end, column end */
}

.right {
    background-color: yellowgreen;
    grid-area: right;
}

header {
    background-color: blue;
    grid-area: header;
}

footer {
    background-color: violet;
    grid-area: footer;
}